// –í —Ñ–∞–π–ª–µ src/core/supabase/directPayment.ts

import { v4 as uuidv4 } from 'uuid'
import { supabase } from '@/core/supabase'
import { ModeEnum } from '@/interfaces/modes'
import { logger } from '@/utils/logger'
import {
  getUserBalance,
  invalidateBalanceCache,
} from '@/core/supabase/getUserBalance'
import { TransactionType, PaymentStatus } from '@/interfaces/payments.interface'
import { sendTransactionNotificationTest } from '@/helpers/sendTransactionNotification'

// --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° –í–•–û–î–ù–´–• –ü–ê–†–ê–ú–ï–¢–†–û–í ---
export interface DirectPaymentParams {
  /** Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  telegram_id: string
  /** –°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥) */
  amount: number
  /** –¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ) */
  type: TransactionType
  /** –û–ø–∏—Å–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é) */
  description: string
  /** –ò–º—è –±–æ—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–µ—Ä–∞—Ü–∏—è */
  bot_name: string
  /** –¢–∏–ø —Å–µ—Ä–≤–∏—Å–∞/—Ä–µ–∂–∏–º, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –æ–ø–µ—Ä–∞—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'neuro_photo') */
  service_type: ModeEnum | string
  /** –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π ID –æ–ø–µ—Ä–∞—Ü–∏–∏/–∏–Ω–≤–æ–π—Å–∞ */
  inv_id?: string
  /** –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –±–∞–ª–∞–Ω—Å–∞ –ø–µ—Ä–µ–¥ —Å–ø–∏—Å–∞–Ω–∏–µ–º (true/false) */
  bypass_payment_check?: boolean
  /** –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î */
  metadata?: Record<string, any>
}

// --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° –†–ï–ó–£–õ–¨–¢–ê–¢–ê ---
export interface DirectPaymentResult {
  /** –§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ */
  success: boolean
  /** ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ payments_v2 (–µ—Å–ª–∏ —É—Å–ø–µ—Ö) */
  payment_id?: number
  /** ID –æ–ø–µ—Ä–∞—Ü–∏–∏ (–ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∏–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π) */
  operation_id: string
  /** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ (–µ—Å–ª–∏ —É—Å–ø–µ—Ö) */
  balanceChange?: {
    before: number
    after: number
    difference: number
  }
  /** –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ (–µ—Å–ª–∏ –Ω–µ—É—Å–ø–µ—Ö) */
  error?: string // –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ –¥–ª—è –æ—à–∏–±–∫–∏
}

/**
 * @function directPaymentProcessor (v2.0)
 * @description **–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–≤–µ–∑–¥ —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.**
 *              –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –ù–ï —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –≤–Ω–µ—à–Ω–∏–º–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏.
 *              –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É "—Ä–∞—Å—á–µ—Ç –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º":
 *              1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å (–µ—Å–ª–∏ —ç—Ç–æ —Å–ø–∏—Å–∞–Ω–∏–µ).
 *              2. **–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å** –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–¥–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥) –≤ —Ç–∞–±–ª–∏—Ü–µ `payments_v2`.
 *              3. –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫—ç—à –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 *              4. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏, –≤–∫–ª—é—á–∞—è ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏.
 *              **–ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç** `createSuccessfulPayment` (—Ç.–∫. —Ç–∞ –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤).
 *              **–ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç** `updateUserBalance` (—Ç.–∫. –±–∞–ª–∞–Ω—Å —Å—á–∏—Ç–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏).
 *
 * @param {DirectPaymentParams} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–º. –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å DirectPaymentParams).
 * @returns {Promise<DirectPaymentResult>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–º. –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å DirectPaymentResult).
 */
export async function directPaymentProcessor(
  params: DirectPaymentParams
): Promise<DirectPaymentResult> {
  const {
    telegram_id,
    amount,
    type,
    description,
    bot_name, // –î–æ—Å—Ç—É–ø–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    service_type, // –î–æ—Å—Ç—É–ø–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    inv_id, // –î–æ—Å—Ç—É–ø–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    bypass_payment_check = false, // –î–æ—Å—Ç—É–ø–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    metadata = {}, // –î–æ—Å—Ç—É–ø–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  } = params

  const operationId = inv_id || `direct-${uuidv4()}`
  const normalizedAmount = Number(amount)

  // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–≥–µ—Ä v2.0 –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
  logger.info('üöÄ [DIRECT_PAYMENT v2.0] –ù–∞—á–∞–ª–æ –ø—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞', {
    /* ... */
  })

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Å—É–º–º—ã
    if (normalizedAmount <= 0) {
      throw new Error(
        `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞: ${normalizedAmount}. –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å > 0.`
      )
    }

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    const currentBalance = await getUserBalance(telegram_id)
    logger.info('üí∞ [DIRECT_PAYMENT v2.0] –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω', {
      telegram_id,
      currentBalance,
    })

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è
    if (
      type === TransactionType.MONEY_EXPENSE &&
      !bypass_payment_check &&
      currentBalance < normalizedAmount
    ) {
      const errorMsg = `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ë–∞–ª–∞–Ω—Å: ${currentBalance}, —Ç—Ä–µ–±—É–µ—Ç—Å—è: ${normalizedAmount}`
      logger.error('‚ö†Ô∏è [DIRECT_PAYMENT v2.0] –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', {
        telegram_id,
        currentBalance,
        requiredAmount: normalizedAmount,
      })
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å–æ–≥–ª–∞—Å–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É DirectPaymentResult
      return { success: false, error: errorMsg, operation_id: operationId }
    } else if (type === TransactionType.MONEY_EXPENSE && bypass_payment_check) {
      logger.warn(
        'üîì [DIRECT_PAYMENT v2.0] –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (bypass)',
        { telegram_id }
      )
    }

    // 4. –ü–†–Ø–ú–ê–Ø –í–°–¢–ê–í–ö–ê –ó–ê–ü–ò–°–ò –í payments_v2
    logger.info('üí≥ [DIRECT_PAYMENT v2.0] –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–π –≤—Å—Ç–∞–≤–∫–∏ –∑–∞–ø–∏—Å–∏', {
      /* ... */
    })

    const paymentInsertData = {
      telegram_id: String(telegram_id),
      amount: normalizedAmount,
      stars: normalizedAmount,
      payment_method: 'balance',
      description: description,
      type: type,
      service_type: String(service_type),
      bot_name: bot_name,
      status: PaymentStatus.COMPLETED,
      inv_id: operationId,
      metadata: {
        ...metadata,
        direct_payment: true,
        balance_before: currentBalance,
      },
      currency: 'XTR',
    }
    // logger.info('‚û°Ô∏è [DIRECT_PAYMENT v2.0] –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏:', { insertData: paymentInsertData });

    const { data: insertedPayment, error: insertError } = await supabase
      .from('payments_v2')
      .insert([paymentInsertData])
      .select('id')
      .single()

    if (insertError) {
      logger.error('‚ùå [DIRECT_PAYMENT v2.0] –û—à–∏–±–∫–∞ DB –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∑–∞–ø–∏—Å–∏', {
        /* ... */
      })
      throw new Error(
        `–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –ø–ª–∞—Ç–µ–∂–∞: ${insertError.message}`
      )
    }

    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ID
    if (!insertedPayment?.id || typeof insertedPayment.id !== 'number') {
      logger.error(
        '‚ùå [DIRECT_PAYMENT v2.0] –ó–∞–ø–∏—Å—å –≤—Å—Ç–∞–≤–ª–µ–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID!',
        {
          /* ... */
        }
      )
      throw new Error(
        '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏ –æ –ø–ª–∞—Ç–µ–∂–µ –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏.'
      )
    }

    const newPaymentId = insertedPayment.id
    logger.info('‚úÖ [DIRECT_PAYMENT v2.0] –ó–∞–ø–∏—Å—å –æ –ø–ª–∞—Ç–µ–∂–µ —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞', {
      payment_id: newPaymentId,
      telegram_id,
    })

    // 5. –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫—ç—à–∞ –±–∞–ª–∞–Ω—Å–∞
    logger.info('üîÑ [DIRECT_PAYMENT v2.0] –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫—ç—à–∞ –±–∞–ª–∞–Ω—Å–∞', {
      telegram_id,
    })
    await invalidateBalanceCache(String(telegram_id))

    // 6. –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    const newBalance = await getUserBalance(telegram_id)
    logger.info('üí∞ [DIRECT_PAYMENT v2.0] –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω', {
      telegram_id,
      newBalance,
    })

    // 7. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try {
      // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ë–ï–ó 'type', –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω –≤ SendTransactionNotificationParams
      const notificationParams = {
        telegram_id: Number(telegram_id),
        operationId: operationId,
        amount: normalizedAmount,
        currentBalance: currentBalance,
        newBalance: newBalance,
        description: description,
        isRu: metadata?.is_ru ?? true,
        bot_name: bot_name,
      }
      await sendTransactionNotificationTest(notificationParams)
      logger.info(
        '‚úâÔ∏è [DIRECT_PAYMENT v2.0] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
        {
          /* ... */
        }
      )
    } catch (notifyError) {
      logger.error('‚ùå [DIRECT_PAYMENT v2.0] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', {
        /* ... */
      })
    }

    logger.info(
      'üèÅ [DIRECT_PAYMENT v2.0] –ü—Ä—è–º–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',
      {
        /* ... */
      }
    )

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return {
      success: true,
      payment_id: newPaymentId,
      operation_id: operationId,
      balanceChange: {
        before: currentBalance,
        after: newBalance,
        difference: newBalance - currentBalance,
      },
    }
  } catch (error) {
    const errorMessage =
      error instanceof Error ? error.message : 'Unknown direct payment error'
    logger.error('‚ùå [DIRECT_PAYMENT v2.0] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞', {
      /* ... */
    })
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å–æ–≥–ª–∞—Å–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É DirectPaymentResult
    return { success: false, error: errorMessage, operation_id: operationId }
  }
}
