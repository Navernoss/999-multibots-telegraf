#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞
SSH_KEY=~/.ssh/id_rsa
SERVER=root@999-multibots-u14194.vm.elestio.app
PROJECT_PATH=/opt/app/999-multibots-telegraf

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    local type=$1
    local message=$2
    case $type in
        "info")
            echo -e "${BLUE}[INFO]${NC} $message"
            ;;
        "success")
            echo -e "${GREEN}[SUCCESS]${NC} $message"
            ;;
        "error")
            echo -e "${RED}[ERROR]${NC} $message"
            ;;
        "header")
            echo -e "\n${BLUE}=== $message ===${NC}\n"
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è SSH –∫–ª—é—á–∞
if [ ! -f "$SSH_KEY" ]; then
    print_message "error" "SSH key not found at $SSH_KEY"
    exit 1
fi

print_message "header" "Starting NeuroBlogger Deployment using Docker"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
cat << 'EOF' > /tmp/deploy.sh
#!/bin/bash

cd /opt/app/999-multibots-telegraf

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "Installing Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    systemctl start docker
    systemctl enable docker
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "Installing Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
fi

# Git –æ–ø–µ—Ä–∞—Ü–∏–∏
echo "Performing git operations..."
git add .
git commit -m "üöÄ Auto-commit before deployment $(date +%Y-%m-%d_%H-%M-%S)"
git pull origin main

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "Stopping old containers..."
docker-compose down

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "Building and starting new containers..."
docker-compose up --build -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "Checking container status..."
docker-compose ps
docker-compose logs --tail=100

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ tmux –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
if ! command -v tmux &> /dev/null; then
    apt-get update && apt-get install -y tmux
fi

# –£–±–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
tmux kill-session -t neuroblogger 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é tmux —Å–µ—Å—Å–∏—é
tmux new-session -d -s neuroblogger

# –†–∞–∑–¥–µ–ª—è–µ–º –æ–∫–Ω–æ –Ω–∞ –ø–∞–Ω–µ–ª–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
tmux split-window -h
tmux select-pane -t 0
tmux send-keys "docker-compose logs -f" C-m
tmux select-pane -t 1
tmux send-keys "docker stats" C-m

echo "Deployment completed! Use 'tmux attach -t neuroblogger' to monitor the application"
EOF

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º –∏ –∫–æ–ø–∏—Ä—É–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
chmod +x /tmp/deploy.sh
scp -i $SSH_KEY /tmp/deploy.sh $SERVER:/tmp/deploy.sh

# –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
print_message "info" "Executing deployment script on server..."
ssh -i $SSH_KEY $SERVER "bash /tmp/deploy.sh"

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
rm /tmp/deploy.sh
ssh -i $SSH_KEY $SERVER "rm /tmp/deploy.sh"

print_message "success" "Deployment completed!"
print_message "info" "You can monitor the deployment using these commands:"
echo "Connect to tmux session:"
echo "ssh -i $SSH_KEY $SERVER 'tmux attach -t neuroblogger'"
echo "Check Docker status:"
echo "ssh -i $SSH_KEY $SERVER 'docker-compose ps'"
echo "View logs:"
echo "ssh -i $SSH_KEY $SERVER 'docker-compose logs -f'"
echo "Check Docker stats:"
echo "ssh -i $SSH_KEY $SERVER 'docker stats'"